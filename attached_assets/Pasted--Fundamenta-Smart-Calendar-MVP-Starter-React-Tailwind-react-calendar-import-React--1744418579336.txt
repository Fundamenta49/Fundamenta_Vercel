// Fundamenta Smart Calendar - MVP Starter
// React + Tailwind + react-calendar

import React, { useState } from "react";
import Calendar from "react-calendar";
import 'react-calendar/dist/Calendar.css';

export default function FundamentaCalendar() {
  const [date, setDate] = useState(new Date());
  const [events, setEvents] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const [newEvent, setNewEvent] = useState({ title: '', category: '', date: new Date() });

  const handleAddEvent = () => {
    setEvents([...events, newEvent]);
    setNewEvent({ title: '', category: '', date: new Date() });
    setShowModal(false);
  };

  const tileContent = ({ date }) => {
    const eventOnThisDate = events.find(e => new Date(e.date).toDateString() === date.toDateString());
    return eventOnThisDate ? (
      <div className="text-xs text-white bg-blue-500 rounded px-1 mt-1">
        {eventOnThisDate.title}
      </div>
    ) : null;
  };

  return (
    <div className="p-4 max-w-md mx-auto">
      <h1 className="text-xl font-bold mb-4 text-center">ðŸ“† Fundamenta Smart Calendar</h1>
      <Calendar
        onChange={setDate}
        value={date}
        tileContent={tileContent}
        className="rounded-lg shadow"
      />
      <button
        onClick={() => setShowModal(true)}
        className="mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 w-full"
      >
        + Add Event
      </button>

      {showModal && (
        <div className="fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center">
          <div className="bg-white p-6 rounded-lg shadow-lg w-80">
            <h2 className="text-lg font-bold mb-2">Add New Event</h2>
            <input
              type="text"
              placeholder="Event Title"
              value={newEvent.title}
              onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}
              className="w-full border rounded p-2 mb-2"
            />
            <input
              type="text"
              placeholder="Category (e.g., Health, Finance)"
              value={newEvent.category}
              onChange={(e) => setNewEvent({ ...newEvent, category: e.target.value })}
              className="w-full border rounded p-2 mb-2"
            />
            <input
              type="date"
              value={newEvent.date.toISOString().split('T')[0]}
              onChange={(e) => setNewEvent({ ...newEvent, date: new Date(e.target.value) })}
              className="w-full border rounded p-2 mb-4"
            />
            <div className="flex justify-end">
              <button onClick={() => setShowModal(false)} className="text-gray-500 mr-4">Cancel</button>
              <button onClick={handleAddEvent} className="bg-blue-500 text-white px-3 py-1 rounded">Save</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
